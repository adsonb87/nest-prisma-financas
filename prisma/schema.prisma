// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int         @id @default(autoincrement())
  nome         String
  email        String      @unique
  senha        String
  perfil       Perfil?
  transacoes   Transacao[]
  criadoEm     DateTime    @default(now())
  atualizadoEm DateTime    @updatedAt

  @@map("usuarios")
}

model Perfil {
  id           Int      @id @default(autoincrement())
  foto         String?
  usuario      Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarioId    Int      @unique
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt

  @@map("perfis")
}

//MODO IMPLICITO DE RELACIONAMENTO MANY TO MANY
model Categoria {
  id            Int         @id @default(autoincrement())
  nome          String
  transacoes    Transacao[]
  tipoCategoria Tipo

  @@map("categorias")
}

model Transacao {
  id            Int       @id @default(autoincrement())
  titulo        String
  descricao     String?
  valor         Float
  tipoTransacao Tipo
  usuario       Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuarioId     Int
  categoria     Categoria @relation(fields: [categoriaId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categoriaId   Int
  criadoEm      DateTime  @default(now())
  atualizadoEm  DateTime  @updatedAt

  @@map("transacoes")
}

enum Tipo {
  RECEITA
  DESPESA
}
